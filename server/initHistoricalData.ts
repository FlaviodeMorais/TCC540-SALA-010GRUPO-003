/**
 * Script para inicializa√ß√£o das tabelas de dados hist√≥ricos e
 * realiza√ß√£o da primeira agrega√ß√£o dos dados existentes
 */

import { 
  initHistoricalDatabase, 
  processHistoricalData, 
  logSystemEvent 
} from './services/historicalDataService';

async function main() {
  try {
    console.log('üîÑ Iniciando configura√ß√£o de dados hist√≥ricos...');
    
    // Inicializar tabelas
    await initHistoricalDatabase();
    console.log('‚úÖ Tabelas de dados hist√≥ricos criadas com sucesso!');
    
    // Calcular per√≠odo para agrega√ß√£o (todo o banco)
    // Vamos buscar desde 01/01/2000 at√© a data atual
    const startDate = new Date('2000-01-01').getTime();
    const endDate = Date.now();
    
    console.log(`üîÑ Processando dados hist√≥ricos de ${new Date(startDate).toLocaleString()} at√© ${new Date(endDate).toLocaleString()}`);
    console.log('‚ö†Ô∏è Isso pode levar alguns minutos dependendo do volume de dados...');
    
    // Executar agrega√ß√µes
    const result = await processHistoricalData(startDate, endDate);
    
    console.log('‚úÖ Agrega√ß√£o de dados hist√≥ricos conclu√≠da!');
    console.log(`üìä Resultados:
    - Registros hor√°rios: ${result.hourly}
    - Registros di√°rios: ${result.daily}
    - Registros semanais: ${result.weekly}
    - Registros mensais: ${result.monthly}
    `);
    
    await logSystemEvent(
      'info', 
      'Inicializa√ß√£o de dados hist√≥ricos conclu√≠da', 
      `Agregados ${result.hourly} registros hor√°rios, ${result.daily} di√°rios, ${result.weekly} semanais e ${result.monthly} mensais.`
    );
    
    console.log('‚ú® Processo finalizado com sucesso!');
    
  } catch (error) {
    console.error('‚ùå Erro durante inicializa√ß√£o dos dados hist√≥ricos:', error);
    await logSystemEvent(
      'error', 
      'Erro na inicializa√ß√£o de dados hist√≥ricos', 
      error instanceof Error ? error.message : String(error)
    );
  }
}

main().catch(console.error);